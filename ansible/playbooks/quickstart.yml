---
- hosts: app02

  vars:
    user_dir: "/home/vagrant"
    app_dir: "{{user_dir}}/pms18/QuickStart-App"
    git_repo_url: "https://github.com/theohitman/pms18.git"
    git_repo_branch: "main"
  
  tasks:

  - name: ensure github.com is a known host
    lineinfile:
      dest: "{{user_dir}}/.ssh/known_hosts"
      create: yes
      state: present
      line: "{{lookup('pipe', 'ssh-keyscan -t rsa github.com')}}"
      regexp: "^github\\.com"

  - name: clone project
    git:
      repo: "{{git_repo_url}}"
      version: "{{git_repo_branch}}"
      clone: yes
      dest: "{{user_dir}}/pms18"
    changed_when: true

  - name: install and activate virtual environment
    block:
    - name: setup virtual environment
      pip:
        requirements: "{{app_dir}}/requirements.txt"
        virtualenv: "{{app_dir}}/fvenv"
        virtualenv_python: python3
        state: forcereinstall
    rescue:
    - name: "APT - install misc packages"
      apt:
        name: [python3, python3-pip, python3-virtualenv, virtualenv, libmysqlclient-dev, mycli, pgcli, libpq-dev]
        update_cache: yes
      become: yes
      become_user: root
      when: hostvars[inventory_hostname].ansible_distribution == 'Ubuntu'
    always:
    - name: setup virtual environment
      pip:
        requirements: "{{app_dir}}/requirements.txt"
        virtualenv: "{{app_dir}}/fvenv"
        virtualenv_python: python3
        state: forcereinstall
      
    - name: copy flask service file
      template:
        src: ../files/flask/flaskgunicorn.service.j2
        dest: "/etc/systemd/system/flaskgunicorn.service"
      become: yes
      become_user: root
      notify: restart flaskgunicorn

    - name: ensure flaskgunicorn service started
      service: 
        name: flaskgunicorn
        state: started
        enabled: yes
      become: yes

  handlers:

  - name: restart flaskgunicorn
    service:
      name: flaskgunicorn
      state: restarted
    become: yes